<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context-3.0.xsd
							http://www.springframework.org/schema/cache 
							http://www.springframework.org/schema/cache/spring-cache.xsd
							http://www.springframework.org/schema/jdbc
							http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
							">
							
    <!-- dataSource 
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		    <property name="driverClass" value="${jdbc.driverClassName}"/>
		    <property name="jdbcUrl" value="${jdbc.url}"/>
		    <property name="user" value="${jdbc.username}"/>
		    <property name="password" value="${jdbc.password}"/>
		    <property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}"/>
		    <property name="automaticTestTable" value="${jdbc.automaticTestTable}"/>
		    <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
		    <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
		    <property name="testConnectionOnCheckout" value="${jdbc.testConnectionOnCheckout}"/>
    </bean>
	-->
	
	<!-- jdbc properties -->
	<context:property-placeholder location="classpath:spring/config/jdbc.properties" />
	
	<!-- alibaba datasource -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="10" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="10000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
		<property name="defaultAutoCommit" value="true" />
		<!-- 验证连接有效与否的SQL，不同的数据配置不同  -->
		<property name="validationQuery" value="select 1 " />
		<property name="filters" value="stat" />
		<property name="proxyFilters">
			<list>
				<ref bean="logFilter" />
			</list>
		</property>
	</bean>

	<bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
		<property name="statementExecutableSqlLogEnable" value="false" />
	</bean>
	
	<!--在下面配置hibernate映射 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
            <!-- 包注解方式 -->
            <property name="packagesToScan">
            	<list>
            		<value>com.freedom.search.hibernate.entity</value>
            		<value>com.freedom.search.admin.entity</value>
            		<value>com.freedom.search.webapp.entity</value>
            	</list>
            </property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">${hibernate.dialect}</prop> 
					<prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
					<prop key="hibernate.format_sql">${hibernate.format.sql}</prop>
                    <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>				
					<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
					<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
					<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				</props>
			</property>
    </bean>
    
 </beans>
 
